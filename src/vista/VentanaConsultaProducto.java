package vista;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import modelo.vo.ProductoVo;
import modelo.vo.UsuarioVo;

import controlador.Coordinador;


/**
 *
 * @author User
 */
public class VentanaConsultaProducto extends JDialog implements ActionListener{

    private JLabel TituloConsulta, labelIdProducto, labelCantidad, labelNombre, labelPrecio, labelTexto;
    private JButton btonCancelar,btonConsultar,btonActualizar,btonEliminar,btonConsultarList;
    private JTextField campoConsultarIdProducto, campoIdProducto, campoCantidad, campoNombre, campoPrecio;
    private javax.swing.JPanel panelConsulta;
    private Map<String, Integer> tipoUsuariosMap;
    private javax.swing.JSeparator separadorInferior,separadorSuperior;
    
    private javax.swing.JTable tablaProductos;
    private javax.swing.JScrollPane scrollPaneUsuarios;
    
    private Coordinador miCoordinador;
	
    /**
     * Creates new form VentanaConsultaIndividual
     */
    public VentanaConsultaProducto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(710,720);
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelConsulta = new javax.swing.JPanel();
        TituloConsulta = new javax.swing.JLabel();
        labelPrecio = new javax.swing.JLabel();
        labelTexto = new javax.swing.JLabel();
        labelIdProducto = new javax.swing.JLabel();
        labelCantidad = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        separadorInferior = new javax.swing.JSeparator();
        campoNombre = new javax.swing.JTextField();
        campoPrecio = new javax.swing.JTextField();
        campoConsultarIdProducto = new javax.swing.JTextField();
        campoCantidad = new javax.swing.JTextField();
        separadorSuperior = new javax.swing.JSeparator();
        btonCancelar = new javax.swing.JButton();
        btonConsultar = new javax.swing.JButton();
        campoIdProducto = new javax.swing.JTextField();
        btonConsultarList = new javax.swing.JButton();
        tablaProductos= new javax.swing.JTable();
    

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        //getContentPane().setLayout(null);

        panelConsulta.setBackground(new java.awt.Color(204, 204, 204));
        panelConsulta.setLayout(null);

        TituloConsulta.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        TituloConsulta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloConsulta.setText("Consultar Producto");
        TituloConsulta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelConsulta.add(TituloConsulta);
        TituloConsulta.setBounds(20, 10, 660, 60);

        labelPrecio.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelPrecio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPrecio.setText("Precio:");
        panelConsulta.add(labelPrecio);
        labelPrecio.setBounds(0, 170, 90, 20);

        labelTexto.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        labelTexto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTexto.setText("Ingrese el id del producto a consultar");
        panelConsulta.add(labelTexto);
        labelTexto.setBounds(0, 90, 380, 20);

        labelIdProducto.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelIdProducto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIdProducto.setText("Id producto:");
        panelConsulta.add(labelIdProducto);
        labelIdProducto.setBounds(400, 140, 100, 20);

        labelCantidad.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelCantidad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCantidad.setText("Cantidad:");
        panelConsulta.add(labelCantidad);
        labelCantidad.setBounds(400, 170, 100, 20);

        labelNombre.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelNombre.setText("Nombre:");
        panelConsulta.add(labelNombre);
        labelNombre.setBounds(0, 140, 90, 20);        
                
        panelConsulta.add(separadorInferior);
        separadorInferior.setBounds(20, 260, 660, 10);
        
        panelConsulta.add(campoNombre);
        campoNombre.setBounds(100, 140, 300, 20);
        
        panelConsulta.add(campoPrecio);
        campoPrecio.setBounds(100, 170, 300, 20);
        
        panelConsulta.add(campoConsultarIdProducto);
        campoConsultarIdProducto.setBounds(390, 90, 120, 20);
        
        panelConsulta.add(campoCantidad);
        campoCantidad.setBounds(510, 170, 170, 20);
        
        panelConsulta.add(separadorSuperior);
        separadorSuperior.setBounds(20, 120, 660, 10);
        
        btonActualizar = new javax.swing.JButton();
        btonEliminar = new javax.swing.JButton();

        btonCancelar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btonCancelar.setText("Cancelar");
        panelConsulta.add(btonCancelar);
        btonCancelar.setBounds(460, 260, 170, 30);
        btonCancelar.addActionListener(this);

        btonConsultar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btonConsultar.setText("Buscar");
        btonConsultar.addActionListener(this);
        panelConsulta.add(btonConsultar);
        btonConsultar.setBounds(520, 90, 110, 20);   
        
        btonActualizar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btonActualizar.setText("Actualizar");
        panelConsulta.add(btonActualizar);
        btonActualizar.setBounds(100, 260, 170, 30);
        btonActualizar.addActionListener(this);
        
        btonEliminar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btonEliminar.setText("Eliminar");
        panelConsulta.add(btonEliminar);
        btonEliminar.setBounds(280, 260, 170, 30);
        btonEliminar.addActionListener(this);
        
        btonConsultarList.setFont(new java.awt.Font("Verdana", 0, 14));
        btonConsultarList.setText("Consultar Lista");
        panelConsulta.add(btonConsultarList);
        btonConsultarList.setBounds(250, 300, 210, 30);
        btonConsultarList.addActionListener(this);
        
        panelConsulta.add(campoIdProducto);
        campoIdProducto.setBounds(510, 140, 170, 20);
                
        String[] columnas = {"Id_Producto", "Nombre", "Precio", "Cantidad"};
        DefaultTableModel modeloTabla = new DefaultTableModel(null, columnas);
        tablaProductos = new JTable(modeloTabla);
        scrollPaneUsuarios = new javax.swing.JScrollPane(tablaProductos);

       
        scrollPaneUsuarios.setBounds(20, 340, 660, 150);
        panelConsulta.add(scrollPaneUsuarios);

        getContentPane().add(panelConsulta);
        panelConsulta.setBounds(0, 0, 710, 420);

        pack();
    }
 
	public void setCoordinador(Coordinador miCoordinador) {
		this.miCoordinador=miCoordinador;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource()==btonCancelar) {
			limpiarVentana();
		}
		
		if (e.getSource()==btonConsultar) {
			consultarProducto();
		}
		
		if (e.getSource()==btonActualizar) {
			actualizarProducto();
		}
		
		if (e.getSource()==btonEliminar) {
			
		}
		if (e.getSource() == btonConsultarList) {
			consultarListaproductos();
		}
		
	}		

	private void limpiarVentana() {
		campoConsultarIdProducto.setText("");
		campoNombre.setText("");
		campoIdProducto.setText("");
		campoPrecio.setText("");
		campoCantidad.setText("");
	}
	
	private void consultarProducto() {
		String idProducto = campoConsultarIdProducto.getText();
		if (campoConsultarIdProducto.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Ingrese alg√∫n id de un producto para realizar la busqueda");
			
		} else {
			try {
				ProductoVo miProductoVo = miCoordinador.consultarProducto(idProducto);
				if (miProductoVo == null) {
					JOptionPane.showMessageDialog(null, "El producto no se encuentra registrado");
					
				} else {
					campoIdProducto.setText(miProductoVo.getIdProducto());
					campoNombre.setText(miProductoVo.getNombre());
					campoPrecio.setText(String.valueOf(miProductoVo.getPrecio()));
					campoCantidad.setText(String.valueOf(miProductoVo.getCantidad()));
					
					DefaultTableModel modeloTabla = (DefaultTableModel) tablaProductos.getModel();
					modeloTabla.setRowCount(0);
					
					Object[] fila = {
		                    miProductoVo.getIdProducto(),
		                    miProductoVo.getNombre(),
		                    miProductoVo.getPrecio(),
		                    miProductoVo.getCantidad()
		                };
		                
		                modeloTabla.addRow(fila);
					
				}
				
			} catch (RuntimeException e) {
				JOptionPane.showMessageDialog(null, "Error al consultar el producto: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

			}
		}
		
	}
	
	private void consultarListaproductos() {
		DefaultTableModel modeloTabla = (DefaultTableModel) tablaProductos.getModel();
		modeloTabla.setRowCount(0);
		
		List<ProductoVo> miListaProductos = miCoordinador.consultarProductos();
		
		for (ProductoVo prod : miListaProductos) {
			Object[] fila = {
					prod.getIdProducto(),
					prod.getNombre(),
					prod.getPrecio(),
					prod.getCantidad()
                };
			
			modeloTabla.addRow(fila);
		}
	}
	
	private void actualizarProducto() {
		boolean datosValidos = true;
		if (campoIdProducto.getText().isEmpty() || campoNombre.getText().isEmpty() ||
				campoPrecio.getText().isEmpty() || campoCantidad.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Todos los campos deben estar diligenciados obligatoriamente");
			
		} else {
			ProductoVo miProductoVo = new ProductoVo();
			miProductoVo.setIdProducto(campoIdProducto.getText());
			miProductoVo.setNombre(campoNombre.getText());	
			try {
				double precio = Double.parseDouble(campoPrecio.getText());
				miProductoVo.setPrecio(precio);
				
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, ("Por favor introduce un valor n√∫merico valido "
			+ e.getMessage()));
				datosValidos = false;
				
			}
			try {
				int cantidad = Integer.parseInt(campoCantidad.getText());
				miProductoVo.setCantidad(cantidad);				
				
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, ("Por favor introduce un valor n√∫merico valido "
			+ e.getMessage()));
				datosValidos = false;
				
			}
			
			if(datosValidos) {
				String mensaje = miCoordinador.actualizarProducto(miProductoVo);
				JOptionPane.showMessageDialog(null, mensaje);
				
			}			
			
		}
	}

	
	
	
	
	
}